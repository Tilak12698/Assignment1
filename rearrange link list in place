#include<stdio.h>

 
// Linkedlist Node structure
struct Node
{
    int data;
    struct Node *next;
};
 
// Function to create newNode in a linkedlist
Node* newNode(int key)
{
    Node *temp = new Node;
    temp->data = key;
    temp->next = NULL;
    return temp;
}
 
// Function to reverse the linked list
void reverselist(Node **head)
{
    // Initialize prev and current pointers
    Node *prev = NULL, *curr = *head, *next;
 
    while (curr)
    {
        next = curr->next;
        curr->next = prev;
        prev = curr;
        curr = next;
    }
 
    *head = prev;
}
 
// Function to print the linked list
void printlist(Node *head)
{
    while (head != NULL)
    {
        cout << head->data << " ";
        if(head->next) cout << "-> ";
        head = head->next;
    }
    cout << endl;
}
 
// Function to rearrange a linked list
void rearrange(Node **head)
{
   Node *slow=*head,*fast=(*head);
   while(fast && fast->next)
   {
       slow=slow->next;
       fast=fast->next->next;
   }
   Node *head1=*head;
   Node *head2=slow->next;
   slow->next=NULL;
   reverselist(&head2);
   printlist(head1); 
   printlist(head2); 
   *head=NULL;
     Node *temp;
   while(head1||head2)
   {
       if(head1)
       {
          if(*head==NULL)
          {
              *head=head1;
              temp=*head;
          }
          else
          {
              temp->next=head1;
               temp=temp->next;
          }
          head1=head1->next;
       }
       if(head2)
       {
           temp->next=head2;
           temp=temp->next;
           head2=head2->next;
       }
   }
}
